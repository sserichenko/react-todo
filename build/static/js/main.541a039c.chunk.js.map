{"version":3,"sources":["context.js","Todo/TodoItem.jsx","Todo/TodoList.jsx","Todo/AddTodo.js","Todo/Loader.jsx","Modal/Modal.jsx","App.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","index","onChange","styles","li","display","justifyContent","alignItems","padding","border","marginBottom","borderRadius","fontSize","div","input","marginRight","p","margin","width","todoDone","textDecoration","removeTodo","useContext","style","checked","completed","type","id","title","onClick","bind","className","ul","listStyle","TodoList","todos","onToggleComplete","map","AddTodo","defaultValue","useState","value","setValue","e","target","clear","useInputValue","onSubmitHandler","onSubmit","preventDefault","trim","Math","random","cursor","background","color","Loader","Modal","state","isModalOpen","this","Fragment","setState","Component","App","setTodos","isLoading","setIsLoading","useEffect","axios","get","then","response","setTimeout","data","catch","err","console","warn","finally","log","Provider","filter","item","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.541a039c.chunk.js","sourcesContent":["import React from 'react';\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Context from '../context';\r\nconst TodoItem = ({todo, index, onChange}) => {\r\n\r\n    const styles = {\r\n        li: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            padding: '.4rem .7rem',\r\n            border: '1px solid grey',\r\n            marginBottom: '6px',\r\n            borderRadius: '4px',\r\n            fontSize: '14px'\r\n        },\r\n        div: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n        },\r\n        input: {\r\n            marginRight: '10px'\r\n        },\r\n        p: {\r\n            margin: '0px',\r\n            padding: '0px 4px',\r\n            width: '200px'\r\n        },\r\n        todoDone: {\r\n            margin: '0px',\r\n            padding: '0px',\r\n            width: '200px',\r\n            textDecoration: 'line-through'\r\n        }\r\n    }\r\n\r\n    const {removeTodo} = React.useContext(Context);\r\n\r\n    return (\r\n            <li style={styles.li}>\r\n            <div style={styles.div}>\r\n                <input \r\n                checked={todo.completed}\r\n                style={styles.input} \r\n                type=\"checkbox\" \r\n                onChange={() => onChange(todo.id)}\r\n                />\r\n            <strong style={{ marginRight: '4px'}}>{index + 1}</strong>\r\n            <p style={!todo.completed ? styles.p : styles.todoDone}>{todo.title}</p>   \r\n            </div>\r\n            <button onClick={removeTodo.bind(null, todo.id)}className=\"rm\">&times;</button>\r\n        </li>       \r\n    );\r\n};\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func,\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nconst TodoList = ({todos, onToggleComplete}) => {\r\n\r\n\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {\r\n                todos &&\r\n                todos.map((todo, index)  =>\r\n                    <TodoItem \r\n                    key={todo.id} \r\n                    todo={todo} \r\n                    index={index}\r\n                    onChange={onToggleComplete}\r\n                    />\r\n                )\r\n            }\r\n            \r\n        </ul>\r\n    );\r\n};\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggleComplete: PropTypes.func,\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport Context from '../context';\r\n\r\nconst useInputValue = (defaultValue = '') => {\r\n  const [value, setValue] = React.useState(defaultValue);\r\n  return {\r\n    bind: {\r\n      value,\r\n      onChange: (e) => setValue(e.target.value),\r\n    },\r\n    clear: () => setValue(''),\r\n    value: () => value,\r\n  };\r\n};\r\n\r\nconst AddTodo = () => {\r\n  const input = useInputValue('');\r\n  const { onSubmitHandler } = React.useContext(Context);\r\n\r\n  const sumbitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (input.value().trim()) {\r\n      onSubmitHandler({\r\n        id: Math.random() * 10,\r\n        title: input.value(),\r\n        completed: false,\r\n      });\r\n      input.clear();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form style={{ marginBottom: '20px' }} onSubmit={sumbitHandler}>\r\n      <input\r\n        {...input.bind}\r\n        style={{\r\n          marginRight: '10px',\r\n          borderRadius: '4px',\r\n          border: '1px solid grey',\r\n          padding: '2px',\r\n        }}\r\n        type=\"text\"\r\n      />\r\n      <button\r\n        style={{\r\n          cursor: 'pointer',\r\n          border: 'none',\r\n          background: 'green',\r\n          color: 'white',\r\n          padding: '3px 8px',\r\n          borderRadius: '4px',\r\n        }}>\r\n        Add TODO\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './Modal.css';\r\nexport default class Modal extends React.Component {\r\n  state = {\r\n    isModalOpen: false,\r\n  };\r\n\r\n  render() {\r\n    const { isModalOpen } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        {isModalOpen ? (\r\n          <div className=\"modal\">\r\n            <div className=\"modal-body\">\r\n              <h2>Modal title</h2>\r\n              <p>I am cute modal...</p>\r\n              <button onClick={() => this.setState({isModalOpen: false})} className=\"close-modal\">Close modal</button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <button onClick={() => this.setState({isModalOpen: true})}>Open modal</button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport TodoList from './Todo/TodoList';\nimport Context from './context';\nimport AddTodo from './Todo/AddTodo';\nimport axios from 'axios';\nimport Loader from './Todo/Loader';\nimport Modal from './Modal/Modal';\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const fetchTodos = () => {\n    axios\n      .get('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then((response) => {\n        setIsLoading(true);\n        setTimeout(() => {\n          setTodos([...response.data]);\n          setIsLoading(false);\n        }, 1000);\n      })\n      .catch((err) => console.warn(err))\n      .finally(console.log('finally'));\n  };\n\n  const onToggleComplete = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    );\n  };\n\n  const removeTodo = (id) => {\n    setTodos(todos.filter((item) => item.id !== id));\n  };\n\n  const createTodo = (todo) => {\n    setTodos([...todos, todo]);\n  };\n\n  React.useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  return (\n    <Context.Provider value={{ removeTodo, onSubmitHandler: createTodo }}>\n      <div className=\"wrapper\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <div>\n            <h2>TODO List</h2>\n            <Modal />\n            <AddTodo />\n            {todos && todos.length ? (\n              <TodoList todos={todos} onToggleComplete={onToggleComplete} />\n            ) : (\n              <h3 style={{ color: 'red' }}>You have no todos yet!</h3>\n            )}\n          </div>\n        )}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n;\n"],"sourceRoot":""}